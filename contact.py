import streamlit as st
from twilio.rest import Client
import re

# Twilio API Credentials (Replace with your own)
TWILIO_ACCOUNT_SID = "ACa0ccde15bfd28a78bc4828929f55db51"
TWILIO_AUTH_TOKEN = "4739376322e3871f9439a8b26fefc37f"
TWILIO_PHONE_NUMBER = "+12524270686"
YOUR_PHONE_NUMBER = "+919421293631"

def send_sms(name, email, phone, message) :
    try :
        client = Client ( TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN )

        sms_body = (
            f"ЁЯЪЬ New Message from Farmer:\n"
            f"ЁЯСд Name: {name}\n"
            f"ЁЯУз Email: {email}\n"
            f"ЁЯУЮ Phone: {phone}\n"
            f"ЁЯМ╛ Message: {message}"
        )

        client.messages.create (
            body=sms_body,
            from_=TWILIO_PHONE_NUMBER,
            to=YOUR_PHONE_NUMBER
        )
        st.success ( "Message sent successfully!" )
    except Exception as e :
        st.error ( f"Error sending SMS: {e}" )

def Contact(lang_code):
    # Language translations
    translations = {
        "en" : {
            "title" : "ЁЯУЮ Contact Us",
            "description" : "For any inquiries, reach out to us through the following contact details.",
            "name" : "Your Name",
            "email" : "Your Email",
            "address" : "Your Address",
            "phone" : "Your Phone",
            "message" : "Your Message",
            "send" : "SEND MESSAGE",
            "error" : "Please fill out all required fields (Name, Email, and Message).",
            "success" : "Your message has been sent successfully!",
            "experts" : "ЁЯМЯ Meet Our Experts",
            "expert_info" : "Our team of experts specializes in tomato leaf disease detection. Feel free to reach out to them directly.",
            "urgent" : "For urgent inquiries, contact us through the following channels:",
            "phone_label" : "Phone",
            "email_label" : "Email",
            "website_label" : "Website",
            "instagram_label" : "Instagram",
            "twitter_label" : "Twitter",
            "select_language" : "Select Language"
        },
        "hi" : {
            "title" : "ЁЯУЮ рд╣рдорд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ",
            "description" : "рдХрд┐рд╕реА рднреА рдкреВрдЫрддрд╛рдЫ рдХреЗ рд▓рд┐рдП, рдХреГрдкрдпрд╛ рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рд╕рдВрдкрд░реНрдХ рд╡рд┐рд╡рд░рдгреЛрдВ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рд╣рдорд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред",
            "name" : "рдЖрдкрдХрд╛ рдирд╛рдо",
            "email" : "рдЖрдкрдХрд╛ рдИрдореЗрд▓",
            "address" : "рдЖрдкрдХрд╛ рдкрддрд╛",
            "phone" : "рдЖрдкрдХрд╛ рдлрд╝реЛрди",
            "message" : "рдЖрдкрдХрд╛ рд╕рдВрджреЗрд╢",
            "send" : "рд╕рдВрджреЗрд╢ рднреЗрдЬреЗрдВ",
            "error" : "рдХреГрдкрдпрд╛ рд╕рднреА рдЖрд╡рд╢реНрдпрдХ рдлрд╝реАрд▓реНрдб рднрд░реЗрдВ (рдирд╛рдо, рдИрдореЗрд▓ рдФрд░ рд╕рдВрджреЗрд╢)ред",
            "success" : "рдЖрдкрдХрд╛ рд╕рдВрджреЗрд╢ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рднреЗрдЬ рджрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИ!",
            "experts" : "ЁЯМЯ рд╣рдорд╛рд░реЗ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ",
            "expert_info" : "рд╣рдорд╛рд░реА рдЯреАрдо рдЯрдорд╛рдЯрд░ рдкрддреНрддреА рд░реЛрдЧ рдкрд╣рдЪрд╛рди рдореЗрдВ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рд╣реИред рдЖрдк рд╕реАрдзреЗ рдЙрдирд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред",
            "urgent" : "рддреНрд╡рд░рд┐рдд рдкреВрдЫрддрд╛рдЫ рдХреЗ рд▓рд┐рдП, рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рдЪреИрдирд▓реЛрдВ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рд╣рдорд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ:",
            "phone_label" : "рдлрд╝реЛрди",
            "email_label" : "рдИрдореЗрд▓",
            "website_label" : "рд╡реЗрдмрд╕рд╛рдЗрдЯ",
            "instagram_label" : "рдЗрдВрд╕реНрдЯрд╛рдЧреНрд░рд╛рдо",
            "twitter_label" : "рдЯреНрд╡рд┐рдЯрд░",
            "select_language" : "рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ"
        },
        "mr" : {
            "title" : "ЁЯУЮ рдЖрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛",
            "description" : "рдХреЛрдгрддреНрдпрд╛рд╣реА рдЪреМрдХрд╢реАрд╕рд╛рдареА, рдЦрд╛рд▓реАрд▓ рд╕рдВрдкрд░реНрдХ рддрдкрд╢реАрд▓рд╛рдВрджреНрд╡рд╛рд░реЗ рдЖрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛.",
            "name" : "рддреБрдордЪреЗ рдирд╛рд╡",
            "email" : "рддреБрдордЪрд╛ рдИрдореЗрд▓",
            "address" : "рддреБрдордЪрд╛ рдкрддреНрддрд╛",
            "phone" : "рддреБрдордЪрд╛ рдлреЛрди",
            "message" : "рддреБрдордЪрд╛ рд╕рдВрджреЗрд╢",
            "send" : "рд╕рдВрджреЗрд╢ рдкрд╛рдард╡рд╛",
            "error" : "рдХреГрдкрдпрд╛ рд╕рд░реНрд╡ рдЖрд╡рд╢реНрдпрдХ рдлреАрд▓реНрдб рднрд░рд╛ (рдирд╛рд╡, рдИрдореЗрд▓ рдЖрдгрд┐ рд╕рдВрджреЗрд╢).",
            "success" : "рддреБрдордЪрд╛ рд╕рдВрджреЗрд╢ рдпрд╢рд╕реНрд╡реАрд░реАрддреНрдпрд╛ рдкрд╛рдард╡рд▓рд╛ рдЧреЗрд▓рд╛ рдЖрд╣реЗ!",
            "experts" : "ЁЯМЯ рдЖрдордЪреЗ рддрдЬреНрдЮ",
            "expert_info" : "рдЖрдордЪреА рдЯреАрдо рдЯреЛрдореЕрдЯреЛ рдкрд╛рдирд╛рдВрдЪреНрдпрд╛ рд░реЛрдЧрд╛рдВрдЪреЗ рдирд┐рджрд╛рди рдХрд░рдгреНрдпрд╛рдд рддрдЬреНрдЬреНрдЮ рдЖрд╣реЗ. рддреБрдореНрд╣реА рддреНрдпрд╛рдВрдЪреНрдпрд╛рд╢реА рдереЗрдЯ рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзреВ рд╢рдХрддрд╛.",
            "urgent" : "рддрд╛рддрдбреАрдЪреНрдпрд╛ рдЪреМрдХрд╢реАрд╕рд╛рдареА, рдЦрд╛рд▓реАрд▓ рдЪреЕрдиреЗрд▓рджреНрд╡рд╛рд░реЗ рдЖрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛:",
            "phone_label" : "рдлреЛрди",
            "email_label" : "рдИрдореЗрд▓",
            "website_label" : "рд╡реЗрдмрд╕рд╛рдЗрдЯ",
            "instagram_label" : "рдЗрдВрд╕реНрдЯрд╛рдЧреНрд░рд╛рдо",
            "twitter_label" : "рдЯреНрд╡рд┐рдЯрд░",
            "select_language" : "рднрд╛рд╖рд╛ рдирд┐рд╡рдбрд╛"
        }
    }

    lang = translations[lang_code]

    st.title(lang["title"])
    st.write(lang["description"])

    # Initialize session state for the form fields
    if "form_data" not in st.session_state :
        st.session_state.form_data = {
            "name" : "",
            "email" : "",
            "address" : "",
            "phone" : "",
            "message" : ""
        }

    # Contact Form Inputs
    col1, col2, col3 = st.columns ( 3 )

    with col1 :
        st.session_state.form_data["name"] = st.text_input (
            "**Your Name**",
            placeholder="Enter your name",
            value=st.session_state.form_data["name"]
        )
        st.session_state.form_data["email"] = st.text_input (
            "**Your Email**",
            placeholder="Enter your email",
            value=st.session_state.form_data["email"]
        )

    with col2 :
        st.session_state.form_data["address"] = st.text_input (
            "**Your Address**",
            placeholder="Enter your address",
            value=st.session_state.form_data["address"]
        )
        st.session_state.form_data["phone"] = st.text_input (
            "**Your Phone**",
            placeholder="Enter your phone number",
            value=st.session_state.form_data["phone"]
        )

    with col3 :
        st.session_state.form_data["message"] = st.text_area (
            "**Your Message**",
            placeholder="Type your message here",
            value=st.session_state.form_data["message"]
        )

        # Submit Button
    if st.button ( "SEND MESSAGE" ) :
            # Validation for mandatory fields
        if not st.session_state.form_data["name"] or not st.session_state.form_data["phone"] or not st.session_state.form_data["message"] :
                st.error ( "Please fill out all required fields (Name, Phone, and Message)." )
        else :
            send_sms ( st.session_state.form_data["name"], st.session_state.form_data["email"],st.session_state.form_data["phone"], st.session_state.form_data["message"] )

            st.session_state.form_data = {
                "name" : "",
                "email" : "",
                "address" : "",
                "phone" : "",
                "message" : ""
            }


    # Expertise Team Section
    st.markdown("---")
    st.subheader(lang["experts"])
    st.write(lang["expert_info"])

    experts = [
        {"name": "Dr. Amit Kumar", "image": "image/team-1.jpg", "phone": "+91 98765 43210"},
        {"name": "Dr. Neha Sharma", "image": "image/team-5.jpg", "phone": "+91 98234 56789"},
        {"name": "Dr. Rajesh Verma", "image": "image/team-4.jpg", "phone": "+91 98712 34567"}
    ]

    col1, col2, col3 = st.columns(3)
    for idx, expert in enumerate(experts):
        with [col1, col2, col3][idx]:
            st.image(expert["image"], width=200)
            st.write(f"**{expert['name']}**")
            st.write(f"ЁЯУЮ {expert['phone']}")

    # Additional Information Section
    st.markdown("---")
    st.write(lang["urgent"])
    st.write(f"ЁЯУЮ **{lang['phone_label']}:** +1 (800) 123-4567")
    st.write(f"ЁЯУз **{lang['email_label']}:** support@tomatosystem.com")
    st.write(f"ЁЯМР **{lang['website_label']}:** [www.tomatosystem.com](http://www.tomatosystem.com)")
    st.write(f"ЁЯУ▒ **{lang['instagram_label']}:** [@tomatosystem](https://www.instagram.com/tomatosystem)")
    st.write(f"ЁЯРж **{lang['twitter_label']}:** [@tomatosystem](https://www.twitter.com/tomatosystem)")
    st.markdown("---")

