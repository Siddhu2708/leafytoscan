import os
import json
import tempfile
import numpy as np
import tensorflow as tf
from PIL import Image
from fpdf import FPDF
import streamlit as st
from groq import Groq
import io


def Home(lang_code):
    # Translations Dictionary
    translations = {
        "en": {
            "title": "ЁЯМ▒ Welcome to Tomato Detection System!",
            "subheader": "Your ultimate companion for tomato planting, care, and disease management.",
            "features": """  
                Use the Tomato System to:  
                - Detect and diagnose diseases in tomato plants.  
                - Get expert advice and treatment options with Planty AI.  
                - Shop for high-quality fertilizers, pesticides, and seeds.  
            """,
            "offer": "ЁЯМЯ Special Offer for Tomato Lovers!",
            "buy_seeds": "Buy Premium Tomato Seeds Now!",
            "seed_benefits": """  
                - High yield and disease resistance.  
                - Suitable for all climates.  
                - Special 20% discount for a limited time!  
            """,
            "why_choose": """  
                ЁЯМЯ Why choose our seeds?  
                - Tested and trusted by farmers worldwide.  
                - Supports sustainable and organic farming practices.  
                - Guaranteed freshness and germination rates.  
            """,
            # "footer_title" : "## ЁЯНГ Thank You for Using Our System!",
            "footer_text" : "We are committed to helping farmers and gardeners maintain healthy tomato crops.  \nIf you have any questions or need further assistance, feel free to reach out.  \n**Happy farming! ЁЯМ▒**",
            "shop": "ЁЯСЙ Visit Our Shop",
            "disease_diagnosis": "ЁЯНЕ Tomato Disease Diagnosis",
            "upload_prompt": "ЁЯУд Upload an image of the tomato leaf",
            "invalid_image": "тЭМ Invalid Image",
            "low_quality" : "### тЪая╕П Low Image Quality",
            "upload_clear" : "Please upload a clearer image for better diagnosis.",
            "upload_valid_image": "Please upload a valid image of a tomato leaf for diagnosis.",
            "disease_detected": "тЬЕ Disease Detected:",
            "confidence": "Confidence:",
            "solution_info": "### Information and Solution:",
            "generate_pdf": "ЁЯУД Generate PDF Report",
            "download_report": "ЁЯУе Download Diagnosis Report",
            "upload_image": "Uploaded Image",
            "Bacterial_spot" : "Bacterial Spot",
            "Early_blight" : "Early Blight",
            "Late_blight" : "Late Blight",
            "Leaf_Mold" : "Leaf Mold",
            "No_tomato_leaf" : "No Tomato Leaf",
            "Septoria_leaf_spot" : "Septoria Leaf Spot",
            "Spider_mites_Two-spotted_spider_mite" : "Spider Mites (Two-Spotted Spider Mite)",
            "Target_Spot" : "Target Spot",
            "Tomato_Yellow_Leaf_Curl_Virus" : "Tomato Yellow Leaf Curl Virus",
            "Tomato_mosaic_virus" : "Tomato Mosaic Virus",
            "Healthy" : "Healthy",
            "powdery_mildew" : "Powdery Mildew",
            "disease_info" : "**Information:**",
            "treatment_solutions" : "**Treatment Solutions:**",
            "pesticide_recommendations" : "**Pesticide Recommendations:**",
            "provide_info" : "Provide information, treatment solutions, and pesticide recommendations for {predicted_class} in tomatoes.",
            "footer_title" : "ЁЯНГ Thank You for Using Our System!",
            "footer_description" : """
            We are dedicated to helping farmers and gardeners maintain **healthy tomato crops**.  
            If you have any questions or need assistance, feel free to reach out.  
            """,
            "footer_closing" : "ЁЯМ▒ **Happy Farming!**"
        },
        "hi": {
            "title": "ЁЯМ▒ рдЯрдорд╛рдЯрд░ рдкрд╣рдЪрд╛рди рдкреНрд░рдгрд╛рд▓реА рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!",
            "subheader": "рдЯрдорд╛рдЯрд░ рдХреА рдЦреЗрддреА, рджреЗрдЦрднрд╛рд▓ рдФрд░ рд░реЛрдЧ рдкреНрд░рдмрдВрдзрди рдХреЗ рд▓рд┐рдП рдЖрдкрдХрд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╕рд╛рдереАред",
            "features": """  
                рдЯрдорд╛рдЯрд░ рд╕рд┐рд╕реНрдЯрдо рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ:  
                - рдЯрдорд╛рдЯрд░ рдХреЗ рдкреМрдзреЛрдВ рдореЗрдВ рдмреАрдорд╛рд░рд┐рдпреЛрдВ рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдПрдВ рдФрд░ рдЙрдирдХрд╛ рдирд┐рджрд╛рди рдХрд░реЗрдВред  
                - Planty AI рдХреЗ рд╕рд╛рде рд╡рд┐рд╢реЗрд╖рдЬреНрдЮ рд╕рд▓рд╛рд╣ рдФрд░ рдЙрдкрдЪрд╛рд░ рд╡рд┐рдХрд▓реНрдк рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред  
                - рдЙрдЪреНрдЪ рдЧреБрдгрд╡рддреНрддрд╛ рд╡рд╛рд▓реЗ рдЙрд░реНрд╡рд░рдХреЛрдВ, рдХреАрдЯрдирд╛рд╢рдХреЛрдВ рдФрд░ рдмреАрдЬреЛрдВ рдХреА рдЦрд░реАрджрд╛рд░реА рдХрд░реЗрдВред  
            """,
            "offer": "ЁЯМЯ рдЯрдорд╛рдЯрд░ рдкреНрд░реЗрдорд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рд╡рд┐рд╢реЗрд╖ рдСрдлрд░!",
            "buy_seeds": "рдкреНрд░реАрдорд┐рдпрдо рдЯрдорд╛рдЯрд░ рдХреЗ рдмреАрдЬ рдЕрднреА рдЦрд░реАрджреЗрдВ!",
            "seed_benefits": """  
                - рдЙрдЪреНрдЪ рдЙрдкрдЬ рдФрд░ рд░реЛрдЧ рдкреНрд░рддрд┐рд░реЛрдзрдХ рдХреНрд╖рдорддрд╛ред  
                - рд╕рднреА рдЬрд▓рд╡рд╛рдпреБ рдХреЗ рд▓рд┐рдП рдЙрдкрдпреБрдХреНрддред  
                - рд╕реАрдорд┐рдд рд╕рдордп рдХреЗ рд▓рд┐рдП рд╡рд┐рд╢реЗрд╖ 20% рдЫреВрдЯ!  
            """,
            "why_choose": """  
                ЁЯМЯ рд╣рдорд╛рд░реЗ рдмреАрдЬ рдХреНрдпреЛрдВ рдЪреБрдиреЗрдВ?  
                - рджреБрдирд┐рдпрд╛ рднрд░ рдХреЗ рдХрд┐рд╕рд╛рдиреЛрдВ рджреНрд╡рд╛рд░рд╛ рдкрд░реАрдХреНрд╖рдг рдФрд░ рднрд░реЛрд╕реЗрдордВрджред  
                - рдЯрд┐рдХрд╛рдК рдФрд░ рдЬреИрд╡рд┐рдХ рдЦреЗрддреА рдХрд╛ рд╕рдорд░реНрдерди рдХрд░рддрд╛ рд╣реИред  
                - рддрд╛рдЬрдЧреА рдФрд░ рдЕрдВрдХреБрд░рдг рджрд░ рдХреА рдЧрд╛рд░рдВрдЯреАред  
            """,
            # "footer_title" : "## ЁЯНГ рд╣рдорд╛рд░реЗ рд╕рд┐рд╕реНрдЯрдо рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж!",
            "footer_text" : "рд╣рдо рдХрд┐рд╕рд╛рдиреЛрдВ рдФрд░ рдмрд╛рдЧрд╡рд╛рдиреЛрдВ рдХреЛ рд╕реНрд╡рд╕реНрде рдЯрдорд╛рдЯрд░ рдХреА рдлрд╕рд▓ рдмрдирд╛рдП рд░рдЦрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдкреНрд░рддрд┐рдмрджреНрдз рд╣реИрдВред  \nрдпрджрд┐ рдЖрдкрдХреЗ рдХреЛрдИ рдкреНрд░рд╢реНрди рд╣реИрдВ рдпрд╛ рдЕрдзрд┐рдХ рд╕рд╣рд╛рдпрддрд╛ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реИ, рддреЛ рдмреЗрдЭрд┐рдЭрдХ рд╣рдорд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред  \n**рдЦреБрд╢рд╣рд╛рд▓ рдЦреЗрддреА рдХрд░реЗрдВ! ЁЯМ▒**",
            "shop": "ЁЯСЙ рд╣рдорд╛рд░реА рджреБрдХрд╛рди рдкрд░ рдЬрд╛рдПрдВ",
            "disease_diagnosis": "ЁЯНЕ рдЯрдорд╛рдЯрд░ рд░реЛрдЧ рдирд┐рджрд╛рди",
            "upload_prompt": "ЁЯУд рдЯрдорд╛рдЯрд░ рдХреА рдкрддреНрддреА рдХреА рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
            "invalid_image": "тЭМ рдЕрдорд╛рдиреНрдп рдЫрд╡рд┐",
            "low_quality" : "### тЪая╕П рдХрдо рдЫрд╡рд┐ рдЧреБрдгрд╡рддреНрддрд╛",
            "upload_clear" : "рдмреЗрд╣рддрд░ рдирд┐рджрд╛рди рдХреЗ рд▓рд┐рдП рдХреГрдкрдпрд╛ рдПрдХ рд╕реНрдкрд╖реНрдЯ рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВред",
            "upload_valid_image": "рдХреГрдкрдпрд╛ рдирд┐рджрд╛рди рдХреЗ рд▓рд┐рдП рдПрдХ рдорд╛рдиреНрдп рдЯрдорд╛рдЯрд░ рдкрддреНрддреА рдХреА рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВред",
            "disease_detected": "тЬЕ рдкрддрд╛ рдЪрд▓рд╛ рд░реЛрдЧ:",
            "confidence": "рд╡рд┐рд╢реНрд╡рд╛рд╕ рд╕реНрддрд░:",
            "solution_info": "### рдЬрд╛рдирдХрд╛рд░реА рдФрд░ рд╕рдорд╛рдзрд╛рди:",
            "generate_pdf": "ЁЯУД рдкреАрдбреАрдПрдл рд░рд┐рдкреЛрд░реНрдЯ рдмрдирд╛рдПрдВ",
            "download_report": "ЁЯУе рдирд┐рджрд╛рди рд░рд┐рдкреЛрд░реНрдЯ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░реЗрдВ",
            "upload_image": "рдЕрдкрд▓реЛрдб рдХреА рдЧрдИ рдЫрд╡рд┐",
            "Bacterial_spot" : "рдмреИрдХреНрдЯреАрд░рд┐рдпрд▓ рд╕реНрдкреЙрдЯ",
            "Early_blight" : "рдЖрд░рдВрднрд┐рдХ рдЭреБрд▓рд╕рд╛",
            "Late_blight" : "рджреЗрд░ рд╕реЗ рдЭреБрд▓рд╕рд╛",
            "Leaf_Mold" : "рдкрддреНрддреЛрдВ рдХрд╛ рдлрдлреВрдВрдж",
            "No_tomato_leaf" : "рдХреЛрдИ рдЯрдорд╛рдЯрд░ рдкрддреНрддрд╛ рдирд╣реАрдВ",
            "Septoria_leaf_spot" : "рд╕реЗрдкреНрдЯреЛрд░рд┐рдпрд╛ рдкрддреНрддреА рдзрдмреНрдмрд╛",
            "Spider_mites_Two-spotted_spider_mite" : "рд╕реНрдкрд╛рдЗрдбрд░ рдорд╛рдЗрдЯреНрд╕ (рдЯреВ-рд╕реНрдкреЙрдЯреЗрдб рд╕реНрдкрд╛рдЗрдбрд░ рдорд╛рдЗрдЯ)",
            "Target_Spot" : "рдЯрд╛рд░реНрдЧреЗрдЯ рд╕реНрдкреЙрдЯ",
            "Tomato_Yellow_Leaf_Curl_Virus" : "рдЯрдорд╛рдЯрд░ рдкреАрд▓рд╛ рдкрддреНрддрд╛ рдХрд░реНрд▓ рд╡рд╛рдпрд░рд╕",
            "Tomato_mosaic_virus" : "рдЯрдорд╛рдЯрд░ рдореЛрдЬрд╝реЗрдХ рд╡рд╛рдпрд░рд╕",
            "Healthy" : "рд╕реНрд╡рд╕реНрде",
            "powdery_mildew" : "рдкрд╛рдЙрдбрд░реА рдорд┐рд▓реНрдбреНрдпреВ",
            "disease_info" : "**рдЬрд╛рдирдХрд╛рд░реА:**",
            "treatment_solutions" : "**рдЙрдкрдЪрд╛рд░ рд╕рдорд╛рдзрд╛рди:**",
            "pesticide_recommendations" : "**рдХреАрдЯрдирд╛рд╢рдХ рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ:**",
            "provide_info" : "{predicted_class} рдХреЗ рд▓рд┐рдП рдЯрдорд╛рдЯрд░реЛрдВ рдореЗрдВ рд╡рд┐рд╕реНрддреГрдд рдЬрд╛рдирдХрд╛рд░реА, рдЙрдкрдЪрд╛рд░ рд╕рдорд╛рдзрд╛рди, рдФрд░ рдЕрдиреБрд╢рдВрд╕рд┐рдд рдХреАрдЯрдирд╛рд╢рдХреЛрдВ рдХреА рдЬрд╛рдирдХрд╛рд░реА рдкреНрд░рджрд╛рди рдХрд░реЗрдВред рдЗрд╕рдореЗрдВ рд░реЛрдЧ рдХреЗ рдХрд╛рд░рдг, рд▓рдХреНрд╖рдг, рд░реЛрдХрдерд╛рдо рдХреЗ рдЙрдкрд╛рдп, рдЙрдкрдЪрд╛рд░ рд╡рд┐рдзрд┐рдпрд╛рдВ (рдЬреИрд╡рд┐рдХ рдФрд░ рд░рд╛рд╕рд╛рдпрдирд┐рдХ рджреЛрдиреЛрдВ), рдФрд░ рдЙрдкрдпреЛрдЧреА рдХреГрд╖рд┐ рддрдХрдиреАрдХреЛрдВ рдХрд╛ рдЙрд▓реНрд▓реЗрдЦ рдХрд░реЗрдВред",
            "description" : """
            **рдЯрдорд╛рдЯрд░ рдкрддреНрддреА рд░реЛрдЧ рдкрд╣рдЪрд╛рди рдкреНрд░рдгрд╛рд▓реА** рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!  
            рдпрд╣ рдЯреВрд▓ рдХрд┐рд╕рд╛рдиреЛрдВ рдФрд░ рдмрд╛рдЧрд╡рд╛рдиреЛрдВ рдХреЛ **рдЯрдорд╛рдЯрд░ рдкрддреНрддрд┐рдпреЛрдВ рдХреЗ рд░реЛрдЧреЛрдВ рдХреА рдкрд╣рдЪрд╛рди рдФрд░ рдирд┐рджрд╛рди** рдХрд░рдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред  
            рдмрд╕ **рдЕрдкрдиреЗ рдЯрдорд╛рдЯрд░ рдХреЗ рдкрддреНрддреЗ рдХреА рдПрдХ рддрд╕реНрд╡реАрд░ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ** рдФрд░ рддреБрд░рдВрдд рдирд┐рджрд╛рди рдФрд░ рдЙрдкрдЪрд╛рд░ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВред
            """,
            "footer_title" : "ЁЯНГ рд╣рдорд╛рд░реА рдкреНрд░рдгрд╛рд▓реА рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж!",
            "footer_description" : """
            рд╣рдо рдХрд┐рд╕рд╛рдиреЛрдВ рдФрд░ рдмрд╛рдЧрд╡рд╛рдиреЛрдВ рдХреЛ **рд╕реНрд╡рд╕реНрде рдЯрдорд╛рдЯрд░ рдХреА рдлрд╕рд▓ рдмрдирд╛рдП рд░рдЦрдиреЗ рдореЗрдВ** рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдкреНрд░рддрд┐рдмрджреНрдз рд╣реИрдВред  
            рдпрджрд┐ рдЖрдкрдХреЗ рдХреЛрдИ рдкреНрд░рд╢реНрди рд╣реИрдВ рдпрд╛ рд╕рд╣рд╛рдпрддрд╛ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реИ, рддреЛ рдХреГрдкрдпрд╛ рд╣рдорд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред  
            """,
            "footer_closing" : "ЁЯМ▒ **рдЦреБрд╢рд╣рд╛рд▓ рдЦреЗрддреА рдХрд░реЗрдВ!**"
        },
        "mr": {
            "title": "ЁЯМ▒ рдЯреЛрдореЕрдЯреЛ рд╢реЛрдз рдкреНрд░рдгрд╛рд▓реАрдордзреНрдпреЗ рдЖрдкрд▓реЗ рд╕реНрд╡рд╛рдЧрдд рдЖрд╣реЗ!",
            "subheader": "рдЯреЛрдореЕрдЯреЛ рд▓рд╛рдЧрд╡рдб, рджреЗрдЦрднрд╛рд▓ рдЖрдгрд┐ рд░реЛрдЧ рд╡реНрдпрд╡рд╕реНрдерд╛рдкрдирд╛рд╕рд╛рдареА рдЖрдкрд▓рд╛ рд╕рд░реНрд╡реЛрддреНрддрдо рд╕рд╛рдереАрджрд╛рд░.",
            "features": """  
                рдЯреЛрдореЕрдЯреЛ рд╕рд┐рд╕реНрдЯрдо рд╡рд╛рдкрд░рд╛:  
                - рдЯреЛрдореЕрдЯреЛрдЪреНрдпрд╛ рдЭрд╛рдбрд╛рдВрдордзреАрд▓ рд░реЛрдЧ рд╢реЛрдзрд╛ рдЖрдгрд┐ рддреНрдпрд╛рдВрдЪреЗ рдирд┐рджрд╛рди рдХрд░рд╛.  
                - Planty AI рд╕реЛрдмрдд рддрдЬреНрдЬреНрдЮ рд╕рд▓реНрд▓рд╛ рдЖрдгрд┐ рдЙрдкрдЪрд╛рд░ рдкрд░реНрдпрд╛рдп рдорд┐рд│рд╡рд╛.  
                - рдЙрдЪреНрдЪ-рдЧреБрдгрд╡рддреНрддреЗрдЪреА рдЦрддрдВ, рдХреАрдЯрдХрдирд╛рд╢рдХреЗ рдЖрдгрд┐ рдмрд┐рдпрд╛рдгреЗ рдЦрд░реЗрджреА рдХрд░рд╛.  
            """,
            "offer": "ЁЯМЯ рдЯреЛрдореЕрдЯреЛ рдкреНрд░реЗрдореАрдВрд╕рд╛рдареА рд╡рд┐рд╢реЗрд╖ рдСрдлрд░!",
            "buy_seeds": "рдкреНрд░реАрдорд┐рдпрдо рдЯреЛрдореЕрдЯреЛ рдмрд┐рдпрд╛рдгреЗ рдЖрддреНрддрд╛рдЪ рдЦрд░реЗрджреА рдХрд░рд╛!",
            "seed_benefits": """  
                - рдЙрдЪреНрдЪ рдЙрддреНрдкрд╛рджрди рдЖрдгрд┐ рд░реЛрдЧ рдкреНрд░рддрд┐рдХрд╛рд░рд╢рдХреНрддреА.  
                - рд╕рд░реНрд╡ рд╣рд╡рд╛рдорд╛рдирд╛рд╕рд╛рдареА рдЙрдкрдпреБрдХреНрдд.  
                - рдорд░реНрдпрд╛рджрд┐рдд рд╡реЗрд│реЗрд╕рд╛рдареА 20% рд╡рд┐рд╢реЗрд╖ рд╕реВрдЯ!  
            """,
            "why_choose": """  
                ЁЯМЯ рдЖрдордЪреА рдмрд┐рдпрд╛рдгреЗ рдХрд╛ рдирд┐рд╡рдбрд╛рдпрдЪреА?  
                - рдЬрдЧрднрд░рд╛рддреАрд▓ рд╢реЗрддрдХрд▒реНрдпрд╛рдВрдиреА рддрдкрд╛рд╕рд▓реЗрд▓реА рдЖрдгрд┐ рд╡рд┐рд╢реНрд╡рд╛рд╕рд╛рд░реНрд╣.  
                - рдЯрд┐рдХрд╛рдК рдЖрдгрд┐ рд╕реЗрдВрджреНрд░рд┐рдп рд╢реЗрддреАрд▓рд╛ рд╕рдорд░реНрдерди рджреЗрддреЗ.  
                - рддрд╛рдЬреЗрдкрдгрд╛ рдЖрдгрд┐ рдЙрдЧрд╡рдгрдХреНрд╖рдорддрд╛ рд╣рдореА.  
            """,
            # "footer_title" : "## ЁЯНГ рдЖрдордЪреНрдпрд╛ рдкреНрд░рдгрд╛рд▓реАрдЪрд╛ рд╡рд╛рдкрд░ рдХреЗрд▓реНрдпрд╛рдмрджреНрджрд▓ рдзрдиреНрдпрд╡рд╛рдж!",
            "footer_text" : "рд╢реЗрддрдХрд░реА рдЖрдгрд┐ рдмрд╛рдЧрд╛рдпрддрджрд╛рд░ рдпрд╛рдВрдирд╛ рдирд┐рд░реЛрдЧреА рдЯреЛрдореЕрдЯреЛ рдкрд┐рдХреЗ рдЯрд┐рдХрд╡рдгреНрдпрд╛рд╕рд╛рдареА рдорджрдд рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдЖрдореНрд╣реА рд╡рдЪрдирдмрджреНрдз рдЖрд╣реЛрдд.  \nрддреБрдореНрд╣рд╛рд▓рд╛ рдХрд╛рд╣реА рдкреНрд░рд╢реНрди рдЕрд╕рд▓реНрдпрд╛рд╕ рдХрд┐рдВрд╡рд╛ рдЕрдзрд┐рдХ рдорджрддреАрдЪреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЕрд╕рд▓реНрдпрд╛рд╕, рдХреГрдкрдпрд╛ рдЖрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛.  \n**рд╕реБрдЦрдж рд╢реЗрддреА рдХрд░рд╛! ЁЯМ▒**",
            "shop": "ЁЯСЙ рдЖрдордЪреНрдпрд╛ рджреБрдХрд╛рдирд╛рд▓рд╛ рднреЗрдЯ рджреНрдпрд╛",
            "disease_diagnosis": "ЁЯНЕ рдЯреЛрдореЕрдЯреЛ рд░реЛрдЧ рдирд┐рджрд╛рди",
            "upload_prompt": "ЁЯУд рдЯреЛрдореЕрдЯреЛ рдкрд╛рдирд╛рдЪреА рдкреНрд░рддрд┐рдорд╛ рдЕрдкрд▓реЛрдб рдХрд░рд╛",
            "invalid_image": "тЭМ рдЕрд╡реИрдз рдкреНрд░рддрд┐рдорд╛",
            "low_quality" : "### тЪая╕П рдХрдореА рдкреНрд░рддрд┐рдорд╛ рдЧреБрдгрд╡рддреНрддрд╛",
            "upload_clear" : "рдЙрддреНрддрдо рдирд┐рджрд╛рдирд╛рд╕рд╛рдареА рдХреГрдкрдпрд╛ рд╕реНрдкрд╖реНрдЯ рдкреНрд░рддрд┐рдорд╛ рдЕрдкрд▓реЛрдб рдХрд░рд╛.",
            "upload_valid_image": "рдХреГрдкрдпрд╛ рдирд┐рджрд╛рдирд╛рд╕рд╛рдареА рдпреЛрдЧреНрдп рдЯреЛрдореЕрдЯреЛ рдкрд╛рдирд╛рдЪреА рдкреНрд░рддрд┐рдорд╛ рдЕрдкрд▓реЛрдб рдХрд░рд╛.",
            "disease_detected": "тЬЕ рд╢реЛрдзрд▓реЗрд▓рд╛ рд░реЛрдЧ:",
            "confidence": "рд╡рд┐рд╢реНрд╡рд╛рд╕ рдкрд╛рддрд│реА:",
            "solution_info": "### рдорд╛рд╣рд┐рддреА рдЖрдгрд┐ рдЙрдкрд╛рдп:",
            "generate_pdf": "ЁЯУД рдкреАрдбреАрдПрдл рдЕрд╣рд╡рд╛рд▓ рддрдпрд╛рд░ рдХрд░рд╛",
            "download_report": "ЁЯУе рдирд┐рджрд╛рди рдЕрд╣рд╡рд╛рд▓ рдбрд╛рдЙрдирд▓реЛрдб рдХрд░рд╛",
            "upload_image": "рдЕрдкрд▓реЛрдб рдХреЗрд▓реЗрд▓реА рдкреНрд░рддрд┐рдорд╛",
            "Bacterial_spot" : "рдмреЕрдХреНрдЯреЗрд░рд┐рдпрд▓ рд╕реНрдкреЙрдЯ",
            "Early_blight" : "рд▓рд╡рдХрд░ рдХрд░рдкрдг",
            "Late_blight" : "рдЙрд╢реАрд░рд╛ рдХрд░рдкрдг",
            "Leaf_Mold" : "рдкрд╛рдиреЗ рдмреБрд░рд╢реА",
            "No_tomato_leaf" : "рдЯреЛрдореЕрдЯреЛ рдкрд╛рди рдирд╛рд╣реА",
            "Septoria_leaf_spot" : "рд╕реЗрдкреНрдЯреЛрд░рд┐рдпрд╛ рдкрд╛рди рдбрд╛рдЧ",
            "Spider_mites_Two-spotted_spider_mite" : "рд╕реНрдкрд╛рдпрдбрд░ рдорд╛рдЗрдЯреНрд╕ (рдЯреВ-рд╕реНрдкреЙрдЯреЗрдб рд╕реНрдкрд╛рдпрдбрд░ рдорд╛рдЗрдЯ)",
            "Target_Spot" : "рдЯрд╛рд░реНрдЧреЗрдЯ рд╕реНрдкреЙрдЯ",
            "Tomato_Yellow_Leaf_Curl_Virus" : "рдЯреЛрдореЕрдЯреЛ рдпрд▓реЛ рд▓реАрдл рдХрд░реНрд▓ рд╡реНрд╣рд╛рдпрд░рд╕",
            "Tomato_mosaic_virus" : "рдЯреЛрдореЕрдЯреЛ рдореЛрдЬрд╝реЗрдХ рд╡реНрд╣рд╛рдпрд░рд╕",
            "Healthy" : "рдЖрд░реЛрдЧреНрдпрджрд╛рдпреА",
            "powdery_mildew" : "рдкрд╛рд╡рдбрд░реА рдорд┐рд▓реНрдбреНрдпреВ",
            "disease_info" : "**рдорд╛рд╣рд┐рддреА:**",
            "treatment_solutions" : "**рдЙрдкрдЪрд╛рд░ рдЙрдкрд╛рдп:**",
            "pesticide_recommendations" : "**рдХреАрдЯрдХрдирд╛рд╢рдХ рд╢рд┐рдлрд╛рд░рд╕реА:**",
            "provide_info" : "{predicted_class} рд╕рд╛рдареА рдЯреЛрдореЕрдЯреЛрд╡рд░реАрд▓ рд╕рд╡рд┐рд╕реНрддрд░ рдорд╛рд╣рд┐рддреА, рдЙрдкрдЪрд╛рд░ рдЙрдкрд╛рдп, рдЖрдгрд┐ рд╢рд┐рдлрд╛рд░рд╕ рдХреЗрд▓реЗрд▓реЗ рдХреАрдЯрдХрдирд╛рд╢рдХ рдпрд╛рдВрдЪреА рдорд╛рд╣рд┐рддреА рдкреНрд░рджрд╛рди рдХрд░рд╛. рдпрд╛рдордзреНрдпреЗ рд░реЛрдЧрд╛рдЪреА рдХрд╛рд░рдгреЗ, рд▓рдХреНрд╖рдгреЗ, рдкреНрд░рддрд┐рдмрдВрдзрд╛рддреНрдордХ рдЙрдкрд╛рдп, рдЙрдкрдЪрд╛рд░ рдкрджреНрдзрддреА (рд╕реЗрдВрджреНрд░рд┐рдп рдЖрдгрд┐ рд░рд╛рд╕рд╛рдпрдирд┐рдХ рджреЛрдиреНрд╣реА), рддрд╕реЗрдЪ рдЙрдкрдпреБрдХреНрдд рд╢реЗрддреА рддрдВрддреНрд░рдЬреНрдЮрд╛рдирд╛рдЪрд╛ рд╕рдорд╛рд╡реЗрд╢ рдХрд░рд╛.",
            "description" : """
            **рдЯреЛрдореЕрдЯреЛ рдкрд╛рдирд╛рдВрдЪреНрдпрд╛ рд░реЛрдЧрд╛рдВрдЪреЗ рдирд┐рджрд╛рди рдкреНрд░рдгрд╛рд▓реА** рдордзреНрдпреЗ рдЖрдкрд▓реЗ рд╕реНрд╡рд╛рдЧрдд рдЖрд╣реЗ!  
            рд╣реЗ рд╕рд╛рдзрди рд╢реЗрддрдХрд░реА рдЖрдгрд┐ рдорд╛рд│реА рдпрд╛рдВрдирд╛ **рдЯреЛрдореЕрдЯреЛ рдкрд╛рдирд╛рдВрд╡рд░реАрд▓ рд░реЛрдЧ рдУрд│рдЦрдгреНрдпрд╛рд╕ рдЖрдгрд┐ рдирд┐рджрд╛рди рдХрд░рдгреНрдпрд╛рд╕** рдорджрдд рдХрд░рддреЗ.  
            рдлрдХреНрдд **рдЖрдкрд▓реНрдпрд╛ рдЯреЛрдореЕрдЯреЛрдЪреНрдпрд╛ рдкрд╛рдирд╛рдЪрд╛ рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рдХрд░рд╛** рдЖрдгрд┐ рддреНрд╡рд░рд┐рдд рдирд┐рджрд╛рди рд╡ рдЙрдкрдЪрд╛рд░ рдорд┐рд│рд╡рд╛.
            """,
            "footer_title" : "ЁЯНГ рдЖрдордЪреА рдкреНрд░рдгрд╛рд▓реА рд╡рд╛рдкрд░рд▓реНрдпрд╛рдмрджреНрджрд▓ рдзрдиреНрдпрд╡рд╛рдж!",
            "footer_description" : """
            рдЖрдореНрд╣реА рд╢реЗрддрдХрд░реА рдЖрдгрд┐ рдорд╛рд│реА рдпрд╛рдВрдирд╛ **рдЖрд░реЛрдЧреНрдпрджрд╛рдпреА рдЯреЛрдореЕрдЯреЛ рдкреАрдХ рд░рд╛рдЦрдгреНрдпрд╛рд╕** рдорджрдд рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рд╡рдЪрдирдмрджреНрдз рдЖрд╣реЛрдд.  
            рддреБрдореНрд╣рд╛рд▓рд╛ рдХреЛрдгрддреЗрд╣реА рдкреНрд░рд╢реНрди рдЕрд╕рд▓реНрдпрд╛рд╕ рдХрд┐рдВрд╡рд╛ рдЕрдзрд┐рдХ рдорджрддреАрдЪреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдЕрд╕рд▓реНрдпрд╛рд╕, рдХреГрдкрдпрд╛ рдЖрдордЪреНрдпрд╛рд╢реА рд╕рдВрдкрд░реНрдХ рд╕рд╛рдзрд╛.  
            """,
            "footer_closing" : "ЁЯМ▒ **рдЖрдирдВрджреА рд╢реЗрддреА рдХрд░рд╛!**"
        }
    }

    t = translations[lang_code]

    # Header
    st.title ( t["title"] )
    st.subheader ( t["subheader"] )
    st.write ( t["features"] )

    st.markdown("---")

    # Load the pre-trained model
    model = tf.keras.models.load_model ( 'best_tomato_model.h5' )

    # Classes for diseases
    classes = ['Bacterial_spot', 'Early_blight', 'Late_blight', 'Leaf_Mold', 'No_tomato_leaf', 'Septoria_leaf_spot',
               'Spider_mites Two-spotted_spider_mite', 'Target_Spot', 'Tomato_Yellow_Leaf_Curl_Virus',
               'Tomato_mosaic_virus', 'Healthy', 'powdery_mildew']

    # Function to preprocess image
    def preprocess_image(img) :
        img = img.resize ( (256, 256) )
        img_array = np.array ( img )
        img_array = np.expand_dims ( img_array, axis=0 )
        img_array = img_array / 255.0
        return img_array

    # Tomato Disease Diagnosis Section
    st.title(t["disease_diagnosis"])
    uploaded_file = st.file_uploader(t["upload_prompt"], type=["jpg", "jpeg", "png"])

    if uploaded_file:
        st.image(uploaded_file, caption=t['upload_image'], width=400)

        image = Image.open ( uploaded_file )
        processed_image = preprocess_image ( image )
        prediction = model.predict ( processed_image )

        predicted_class_index = np.argmax ( prediction, axis=1 )[0]
        predicted_class = classes[predicted_class_index]
        confidence = np.max ( prediction ) * 100

        try:
            # Configure Groq API key
            working_dir = os.path.dirname(os.path.abspath(__file__))
            config_data = json.load(open(f"{working_dir}/config.json"))
            GROQ_API_KEY = config_data["GROQ_API_KEY"]
            os.environ["GROQ_API_KEY"] = GROQ_API_KEY

            client = Groq()

            # Query Groq
            messages = [
                {"role": "system", "content": "You are an expert in tomato diseases and treatment solutions."},
                {"role": "user", "content": f"{t['provide_info'].format(predicted_class=predicted_class)}"},

            ]
            response = client.chat.completions.create(
                model="llama-3.1-8b-instant",
                messages=messages
            )
            solution_info = response.choices[0].message.content.strip()

            if predicted_class == "No_tomato_leaf" :
                st.write ( f"### {t['invalid_image']}" )
                st.write ( f" {t['upload_valid_image']}  " )

            elif 85 >= confidence >= 40 :
                st.write (f"### {t['invalid_image']}" )
                st.write (f"{t['upload_valid_image']}  ")

            elif 39 >= confidence >= 0 :
                st.write ( t["low_quality"] )
                st.write ( t ["upload_clear"] )

            else :
                st.write ( f"### {t['disease_detected']} {t[predicted_class]}" )
                st.write ( f"{t['confidence']} {confidence:.2f}%" )
                st.write ( t["solution_info"] )
                st.write(solution_info)

                # Generate PDF Report
                def generate_pdf(image, disease_name, solution_info) :
                    # Initialize PDF
                    pdf = FPDF ()
                    pdf.add_page ()

                    # Title Section
                    pdf.set_font ( "Arial", style="B", size=16 )
                    pdf.cell ( 200, 10, txt="Tomato Disease Diagnosis Report", ln=True, align="C" )

                    # Add Image
                    pdf.ln ( 20 )
                    pdf.image ( image, x=60, y=50, w=90 )

                    # Disease Name Section
                    pdf.ln ( 110 )
                    pdf.set_font ( "Arial", style='B', size=14 )
                    pdf.cell ( 200, 10, txt=f"Disease Name: {disease_name}", ln=True )

                    # Solution and Treatment Section
                    pdf.ln ( 10 )
                    pdf.set_font ( "Arial", size=12 )
                    pdf.multi_cell ( 0, 10, txt=f"Solution and Treatment:\n{solution_info}" )

                    return pdf

                def save_pdf(image, disease_name, solution_info) :
                    # Convert the image to a temporary file
                    temp_image_buffer = io.BytesIO ()
                    image.save ( temp_image_buffer, format="PNG" )
                    temp_image_buffer.seek ( 0 )

                    # Save image to a temporary file
                    with tempfile.NamedTemporaryFile ( delete=False, suffix=".png" ) as temp_image_file :
                        temp_image_file.write ( temp_image_buffer.read () )
                        temp_image_path = temp_image_file.name

                    # Generate the PDF
                    pdf = generate_pdf ( temp_image_path, disease_name, solution_info )

                    # Save the PDF to a temporary file
                    with tempfile.NamedTemporaryFile ( delete=False, suffix=".pdf" ) as pdf_temp_file :
                        pdf_path = pdf_temp_file.name
                        pdf.output ( pdf_path )

                    return pdf_path

                # Button to generate and download PDF
                if st.button ( "Generate PDF Report" ) :
                    try :
                        pdf_path = save_pdf ( image, predicted_class, solution_info )

                        # Provide download button for the PDF
                        with open ( pdf_path, "rb" ) as pdf_file :
                            st.download_button (
                                label="ЁЯУД Download Diagnosis Report",
                                data=pdf_file,
                                file_name="tomato_diagnosis_report.pdf",
                                mime="application/pdf",
                            )
                    except Exception as e :
                        st.error ( f"Error generating the PDF report: {e}" )


        except Exception as e:
            st.error(f"Error: {e}")

    else:
        st.write(t["upload_valid_image"])

    st.markdown ( "---" )
    st.header ( t["offer"] )
    col1, col2 = st.columns ( [2, 1] )
    with col1 :
        st.subheader ( t["buy_seeds"] )
        st.write ( t["seed_benefits"] )
        st.write ( t["why_choose"] )
        st.write ( f"### {t['shop']}" )

    with col2 :
        ad_image = "./image/tomato_seeds.png"
        st.image ( ad_image, caption=t["buy_seeds"], use_container_width=True )

    # Footer
    st.markdown ( f"## {t['footer_title']}" )
    st.write ( t["footer_description"] )
    st.markdown ( f"#### {t['footer_closing']}" )
    st.markdown ( "---" )
